{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(SO0011) - Cost Optiminzation EC2 Right Sizing - AWS CloudFormation Template for AWS Solutions Builder Cost Optimization Tool - EC2 right sizing - **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "KeyName": {
            "Description": "Existing Amazon EC2 key pair for SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InboundTraffic": {
            "Description": "IP address range that can access the EC2 Instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
        },
        "TerminateResources": {
            "Description": "Choose Yes to automatically delete the Amazon Redshift cluster and terminate the EC2 instance after results are returned",
            "Type": "String",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "SendAnonymousData": {
            "Description": "Send anonymous data to AWS",
            "Type": "String",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "m4.large": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": "ami-6057e21a"
            },
            "us-east-2": {
                "HVM64": "ami-aa1b34cf"
            },
            "us-west-2": {
                "HVM64": "ami-32d8124a"
            },
            "us-west-1": {
                "HVM64": "ami-1a033c7a"
            },
            "eu-west-1": {
                "HVM64": "ami-760aaa0f"
            },
            "eu-west-2": {
                "HVM64": "ami-e3051987"
            },
            "eu-central-1": {
                "HVM64": "ami-e28d098d"
            },
            "ap-northeast-1": {
                "HVM64": "ami-2803ac4e"
            },
            "ap-northeast-2": {
                "HVM64": "ami-fc862292"
            },
            "ap-southeast-1": {
                "HVM64": "ami-dd7935be"
            },
            "ap-southeast-2": {
                "HVM64": "ami-1a668878"
            },
            "ap-south-1": {
                "HVM64": "ami-2ed19c41"
            },
            "sa-east-1": {
                "HVM64": "ami-1678037a"
            },
            "ca-central-1": {
                "HVM64": "ami-ef3b838b"
            }
        }
    },
    "Conditions": {
        "Terminate": {
            "Fn::Equals": [
                {
                    "Ref": "TerminateResources"
                },
                "Yes"
            ]
        },
        "SendData": {
            "Fn::Equals": [
                {
                    "Ref": "SendAnonymousData"
                },
                "Yes"
            ]
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Solution Configuration"
                    },
                    "Parameters": [
                        "InboundTraffic",
                        "KeyName",
                        "TerminateResources"
                    ]
                },
                {
                    "Label": {
                        "default": "Anonymous Metrics Request"
                    },
                    "Parameters": [
                        "SendAnonymousData"
                    ]
                }
            ],
            "ParameterLabels": {
                "InboundTraffic": {
                    "default": "Access CIDR Block"
                },
                "KeyName": {
                    "default": "SSH Key"
                },
                "TerminateResources": {
                    "default": "Terminate Resources"
                },
                "SendAnonymousData": {
                    "default": "Send Anonymous Usage Data"
                }
            }
        }
    },
    "Resources": {
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - S3 Bucket"
                    }
                ]
            }
        },
        "S3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "S3Bucket"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:PutObject",
                                "s3:PutObjectAcl"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "S3Bucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Principal": {
                                "AWS": [
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:iam::",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":root"
                                            ]
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetBucketAcl",
                                "s3:GetBucketPolicy"
                            ],
                            "Principal": {
                                "AWS": "386209384616"
                            },
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "S3Bucket"
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": "s3:PutObject",
                            "Principal": {
                                "AWS": "386209384616"
                            },
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "S3Bucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "S3Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "EC2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "EC2InstanceRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:PutObjectAcl",
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "S3Bucket"
                                                },
                                                "/*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "S3Bucket"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:logs:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":log-group:cost-optimization-ec2-right-sizing:*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:Describe*",
                                        "redshift:DeleteCluster",
                                        "ec2:TerminateInstances",
                                        "cloudwatch:GetMetricStatistics"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "EC2InstanceInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2InstanceRole"
                    }
                ]
            }
        },
        "EC2InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80 locked down to the load balancer + SSH access",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "InboundTraffic"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "InboundTraffic"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Security Group"
                    }
                ]
            }
        },
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "PublicSubnetRouteTableAssociation",
                "RedshiftCluster"
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "rightsizing_install": [
                            "install_cfn",
                            "install_rightsizing",
                            "run_rightsizing"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource EC2Instance ",
                                            "         --configsets rightsizing_install ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install_rightsizing": {
                        "packages": {
                            "yum": {
                                "nginx": [],
                                "python27": [],
                                "python27-psycopg2": [],
                                "git": [],
                                "awslogs": []
                            }
                        },
                        "files": {
                            "/tmp/perform-rightsizing.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "pip install requests jmespath boto3\n",
                                            "cd /tmp\n",
                                            "wget https://s3.amazonaws.com/solutions-reference/cost-optimization/latest/run-rightsizing-redshift.py\n",
                                            "wget https://s3.amazonaws.com/solutions-reference/cost-optimization/latest/callgcw.py\n",
                                            "wget https://s3.amazonaws.com/solutions-reference/cost-optimization/latest/getcloudwatchmetrics.py\n",
                                            "wget https://s3.amazonaws.com/solutions-reference/cost-optimization/latest/deleteandterminate.py\n",
                                            "sed -i 's/cfn_s3_bucket_name/",
                                            {
                                                "Fn::GetAtt": [
                                                    "S3Bucket",
                                                    "DomainName"
                                                ]
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i \"s/.s3.amazonaws.com//\" /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_account/",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_db_user/redshiftuser/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_db_pass/",
                                            {
                                                "Fn::GetAtt": [
                                                    "CreateRandomPassword",
                                                    "Password"
                                                ]
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_db_name/rightsizing/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_db_host/",
                                            {
                                                "Fn::GetAtt": [
                                                    "RedshiftCluster",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_db_port/",
                                            {
                                                "Fn::GetAtt": [
                                                    "RedshiftCluster",
                                                    "Endpoint.Port"
                                                ]
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_region/",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "/g' /tmp/run-rightsizing-redshift.py\n",
                                            "sed -i 's/cfn_region/",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "/g' /tmp/callgcw.py\n",
                                            "sed -i 's/cfn_region/",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "/g' /tmp/deleteandterminate.py\n",
                                            "sed -i 's/cfn_db_clusteridentifier/",
                                            {
                                                "Ref": "RedshiftCluster"
                                            },
                                            "/g' /tmp/deleteandterminate.py\n",
                                            "python /tmp/run-rightsizing-redshift.py &>/tmp/run-rightsizing-redshift.log\n",
                                            {
                                                "Fn::If": [
                                                    "Terminate",
                                                    "python /tmp/deleteandterminate.py &>/tmp/deleteandterminate.log\n",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    }
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/awslogs/awslogs.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[general]\n",
                                            "state_file= /var/awslogs/agent-state\n",
                                            "[/var/log/cfn-init.log]\n",
                                            "file = /var/log/cfn-init.log\n",
                                            "log_group_name = cost-optimization-ec2-right-sizing\n",
                                            "log_stream_name = {instance_id}/cfn-init.log\n",
                                            "datetime_format = %d/%b/%Y:%H:%M:%S\n",
                                            "[/tmp/run-rightsizing-redshift.log]\n",
                                            "file = /tmp/run-rightsizing-redshift.log\n",
                                            "log_group_name = cost-optimization-ec2-right-sizing\n",
                                            "log_stream_name = {instance_id}/run-rightsizing-redshift.log\n",
                                            "datetime_format = %d/%b/%Y:%H:%M:%S\n",
                                            "[/tmp/deleteandterminate.log]\n",
                                            "file = /tmp/deleteandterminate.log\n",
                                            "log_group_name = cost-optimization-ec2-right-sizing\n",
                                            "log_stream_name = {instance_id}/deleteandterminate.log\n",
                                            "datetime_format = %d/%b/%Y:%H:%M:%S\n"
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/awslogs/awscli.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[plugins]\n",
                                            "cwlogs = cwlogs\n",
                                            "[default]\n",
                                            "region = ",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/var/awslogs/agent-state": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            " "
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "nginx": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                },
                                "awslogs": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    },
                    "run_rightsizing": {
                        "commands": {
                            "0-perform_rightsizing": {
                                "command": "/tmp/perform-rightsizing.sh",
                                "cwd": "/tmp"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                "m4.large",
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": "m4.large",
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceInstanceProfile"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "EC2InstanceSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "PublicSubnet"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource EC2Instance ",
                                "         --configsets rightsizing_install ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource EC2Instance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Instance"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT8H"
                }
            }
        },
        "RedshiftCluster": {
            "Type": "AWS::Redshift::Cluster",
            "DependsOn": "AttachGateway",
            "Properties": {
                "ClusterType": "multi-node",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "NumberOfNodes": "2",
                "NodeType": "dc1.large",
                "DBName": "rightsizing",
                "MasterUsername": "redshiftuser",
                "MasterUserPassword": {
                    "Fn::GetAtt": [
                        "CreateRandomPassword",
                        "Password"
                    ]
                },
                "ClusterParameterGroupName": {
                    "Ref": "RedshiftClusterParameterGroup"
                },
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "ClusterSubnetGroupName": {
                    "Ref": "RedshiftClusterSubnetGroup"
                },
                "PubliclyAccessible": "false",
                "Port": "5439",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - RS Cluster"
                    }
                ]
            }
        },
        "RedshiftClusterParameterGroup": {
            "Type": "AWS::Redshift::ClusterParameterGroup",
            "Properties": {
                "Description": "Cluster parameter group",
                "ParameterGroupFamily": "redshift-1.0",
                "Parameters": [
                    {
                        "ParameterName": "enable_user_activity_logging",
                        "ParameterValue": "true"
                    }
                ]
            }
        },
        "RedshiftClusterSubnetGroup": {
            "Type": "AWS::Redshift::ClusterSubnetGroup",
            "Properties": {
                "Description": "Cluster subnet group",
                "SubnetIds": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - RS Cluster Subnet Group"
                    }
                ]
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - VPC"
                    }
                ]
            }
        },
        "PublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Subnet"
                    }
                ]
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group",
                "SecurityGroupIngress": [
                    {
                        "SourceSecurityGroupId": {
                            "Ref": "EC2InstanceSecurityGroup"
                        },
                        "FromPort": "5439",
                        "ToPort": "5439",
                        "IpProtocol": "tcp"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Security Group"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Internet Gateway"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "myInternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Cost Optimization: EC2 Right Sizing - Route Table"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "myInternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "SolutionHelperRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Solution_Helper_Permissions",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:logs:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":log-group:/aws/lambda/*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SolutionHelper": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "solution-helper.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "SolutionHelperRole",
                        "Arn"
                    ]
                },
                "Description": "This function creates a CloudFormation custom lambda resource that creates custom lambda functions by finding and replacing specific values from existing lambda function code.",
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                "solutions-",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "library/solution-helper/v3/solution-helper.zip"
                },
                "Runtime": "python2.7",
                "Timeout": "300"
            }
        },
        "CreateRandomPassword": {
            "Type": "Custom::LoadLambda",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SolutionHelper",
                        "Arn"
                    ]
                },
                "Region": {
                    "Ref": "AWS::Region"
                },
                "CreateRandomPassword": "16",
                "RandomPasswordSpecialCharacters": "False"
            }
        },
        "CreateUniqueID": {
            "Type": "Custom::LoadLambda",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SolutionHelper",
                        "Arn"
                    ]
                },
                "Region": {
                    "Ref": "AWS::Region"
                },
                "CreateUniqueID": "true"
            }
        },
        "SendingAnonymousData": {
            "Type": "Custom::LoadLambda",
            "Condition": "SendData",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SolutionHelper",
                        "Arn"
                    ]
                },
                "SendAnonymousData": {
                    "Fn::Join": [
                        "",
                        [
                            "{ 'Solution' : '",
                            "SO00011",
                            "', ",
                            "'UUID' : '",
                            {
                                "Fn::GetAtt": [
                                    "CreateUniqueID",
                                    "UUID"
                                ]
                            },
                            "', ",
                            "'Data': {",
                            "'TerminateResources': '",
                            {
                                "Ref": "TerminateResources"
                            },
                            "'",
                            "}",
                            "}"
                        ]
                    ]
                }
            }
        }
    },
    "Outputs": {
        "ClusterEndpoint": {
            "Description": "Cluster endpoint",
            "Value": {
                "Fn::Join": [
                    ":",
                    [
                        {
                            "Fn::GetAtt": [
                                "RedshiftCluster",
                                "Endpoint.Address"
                            ]
                        },
                        {
                            "Fn::GetAtt": [
                                "RedshiftCluster",
                                "Endpoint.Port"
                            ]
                        }
                    ]
                ]
            }
        },
        "ClusterName": {
            "Description": "Name of cluster",
            "Value": {
                "Ref": "RedshiftCluster"
            }
        },
        "BucketName": {
            "Description": "Bucket for storing Detailed Billing Records",
            "Value": {
                "Ref": "S3Bucket"
            }
        },
        "UUID": {
            "Description": "Newly created random anonymous UUID.",
            "Value": {
                "Fn::GetAtt": [
                    "CreateUniqueID",
                    "UUID"
                ]
            }
        }
    }
}